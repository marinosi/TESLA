CC = gcc
SPLC = ../../cfa/splc
TESLA_CLANG = ../../kernel/tesla-clang
DTRACE = dtrace

OPTLEVEL ?= -O0

CFLAGS=-Wall -g -I../.. -I. $(OPTLEVEL)

PROVIDER_DESC  = ../../libtesla/tesla_dtrace.d
PROVIDER_HDR   = ../../tesla/tesla_dtrace.h
PROVIDER_OBJ   = tesla_dtrace.o
MAIN_OBJ       = test.o
TESLA_OBJS=                                      \
	../../libtesla/tesla_state.o            \
	../../libtesla/tesla_state_global.o     \
	../../libtesla/tesla_state_perthread.o  \
	../../libtesla/tesla_util.o

LD_LIBS        = @LD_LIBS@
TESLA_DTRACE_OBJS     = @TESLA_DTRACE_OBJS@
DTFLAGS         = @DTFLAGS@

all: test

pdf: tcpc.pdf 

%_assertion.o: %_assertion.c %_defs.h
	$(CC) $(DTFLAGS) -c $(CFLAGS) -o $@ $<

%_defs.h %_automata.c %.spec: %.spl $(SPLC) Makefile
	$(SPLC) -t tesla -s $* $<

tcpc-all.dot: tcpc.spl $(SPLC) Makefile
	$(SPLC) -t dot $* $<

tcpc-all.dot.pdf: tcpc-all.dot
	dot -Tpdf -O $<

tcpc.pdf: tcpc-all.dot.pdf
	cp $< $@

%_automata.o: %_automata.c %_defs.h
	$(CC) $(DTFLAGS) -c $(CFLAGS) -o $@ $<

$(MAIN_OBJ): test.c tcpc_defs.h
	cp instrumentation.spec.in instrumentation.spec
	$(TESLA_CLANG) $(DTFLAGS) -c $(CFLAGS) -o $@ test.c

$(PROVIDER_HDR): $(PROVIDER_DESC)
	$(DTRACE) -h -s $?

$(PROVIDER_OBJ): $(MAIN_OBJ) tcpc_automata.o
	$(DTRACE) -G -s $(PROVIDER_DESC) $?

test: $(MAIN_OBJ) tcpc_assertion.o tcpc_automata.o $(TESLA_OBJS) $(TESLA_DTRACE_OBJS)
	$(CC) $(DTFLAGS) -o test $? -lpthread $(LD_LIBS)

instr_gcc.o: instr.c tcpc_defs.h
	$(CC) -c $(CFLAGS) -o $@ $<

gcc_stub.o: gcc_stub.c
	$(CC) -c $(CFLAGS) -o $@ $<

clang_stub.o: clang_stub.c
	$(TESLA_CLANG) -c $(CFLAGS) -o $@ $<

instr_clang_instr.o: instr.c tcpc_defs.h instrumentation.spec.in
	cp instrumentation.spec.in instrumentation.spec
	$(TESLA_CLANG) -c $(CFLAGS) -o $@ $<

instr_clang_noinstr.o: instr.c tcpc_defs.h instrumentation.spec.in
	rm -f instrumentation.spec
	$(TESLA_CLANG) -c $(CFLAGS) -o $@ $<

instr_gcc: instr_gcc.o gcc_stub.o
	$(CC) $(CFLAGS) -o $@ $^	

instr_clang_instr_tesla: instr.c tcpc_assertion.o tcpc_automata.o $(TESLALIBS)
	cp instrumentation.spec.in instrumentation.spec
	$(TESLA_CLANG) $(CFLAGS) -o $@ $^

instr_clang_instr_faketesla: instr.c tcpc_dummy_assertion.o $(TESLALIBS)
	cp instrumentation.spec.in instrumentation.spec
	$(TESLA_CLANG) $(CFLAGS) -o $@ $^

instr_clang_noinstr: instr_clang_noinstr.o clang_stub.o
	rm -f instrumentation.spec
	$(TESLA_CLANG) $(CFLAGS) -o $@ $^

micro: instr_gcc instr_clang_instr_tesla instr_clang_instr_faketesla instr_clang_noinstr
	@ :

clean:
	rm -f test *.o
